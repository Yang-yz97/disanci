input {
  file {
    path => "/logs/nginx/access.log"
    type => "nginx-access"
    start_position => "beginning"
  }
  
  file {
    path => "/logs/nginx/error.log"
    type => "nginx-error"
    start_position => "beginning"
  }
  
  file {
    path => "/logs/api/*.log"
    type => "api"
    start_position => "beginning"
    codec => json
  }
}

filter {
  if [type] == "nginx-access" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
      target => "@timestamp"
    }
    
    geoip {
      source => "clientip"
    }
  }
  
  if [type] == "nginx-error" {
    grok {
      match => { "message" => "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}" }
    }
    
    date {
      match => [ "timestamp", "yyyy/MM/dd HH:mm:ss" ]
      target => "@timestamp"
    }
  }
  
  if [type] == "api" {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
  
  mutate {
    add_field => {
      "environment" => "production"
      "application" => "warehouse"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "warehouse-logs-%{+YYYY.MM.dd}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
  }
  
  # 开发环境下可以启用控制台输出
  # stdout {
  #   codec => rubydebug
  # }
  
  # 严重错误发送告警
  if [severity] == "ERROR" or [level] == "error" {
    http {
      url => "${ALERT_WEBHOOK_URL}"
      format => "json"
      content_type => "application/json"
      body => '{"text":"[ERROR] %{message}"}'
    }
  }
} 